<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4gxYSUNDX1BST0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdCIFhZ
        WiAHzgACAAkABgAxAABhY3NwTVNGVAAAAABJRUMgc1JHQgAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLUhQ
        ICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFjcHJ0AAABUAAA
        ADNkZXNjAAABhAAAAGx3dHB0AAAB8AAAABRia3B0AAACBAAAABRyWFlaAAACGAAAABRnWFlaAAACLAAA
        ABRiWFlaAAACQAAAABRkbW5kAAACVAAAAHBkbWRkAAACxAAAAIh2dWVkAAADTAAAAIZ2aWV3AAAD1AAA
        ACRsdW1pAAAD+AAAABRtZWFzAAAEDAAAACR0ZWNoAAAEMAAAAAxyVFJDAAAEPAAACAxnVFJDAAAEPAAA
        CAxiVFJDAAAEPAAACAx0ZXh0AAAAAENvcHlyaWdodCAoYykgMTk5OCBIZXdsZXR0LVBhY2thcmQgQ29t
        cGFueQAAZGVzYwAAAAAAAAASc1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAABJzUkdCIElFQzYxOTY2
        LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAA
        AAAAAPNRAAEAAAABFsxYWVogAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAA
        AAAAAGKZAAC3hQAAGNpYWVogAAAAAAAAJKAAAA+EAAC2z2Rlc2MAAAAAAAAAFklFQyBodHRwOi8vd3d3
        LmllYy5jaAAAAAAAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkZXNjAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQg
        UkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdC
        IGNvbG91ciBzcGFjZSAtIHNSR0IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJl
        bmNlIFZpZXdpbmcgQ29uZGl0aW9uIGluIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBW
        aWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZp
        ZXcAAAAAABOk/gAUXy4AEM8UAAPtzAAEEwsAA1yeAAAAAVhZWiAAAAAAAEwJVgBQAAAAVx/nbWVhcwAA
        AAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAo8AAAACc2lnIAAAAABDUlQgY3VydgAAAAAAAAQAAAAABQAK
        AA8AFAAZAB4AIwAoAC0AMgA3ADsAQABFAEoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCf
        AKQAqQCuALIAtwC8AMEAxgDLANAA1QDbAOAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFF
        AUwBUgFZAWABZwFuAXUBfAGDAYsBkgGaAaEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIv
        AjgCQQJLAlQCXQJnAnECegKEAo4CmAKiAqwCtgLBAssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNm
        A3IDfgOKA5YDogOuA7oDxwPTA+AD7AP5BAYEEwQgBC0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTw
        BP4FDQUcBSsFOgVJBVgFZwV3BYYFlgWmBbUFxQXVBeUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbR
        BuMG9QcHBxkHKwc9B08HYQd0B4YHmQesB78H0gflB/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQ
        CSUJOglPCWQJeQmPCaQJugnPCeUJ+woRCicKPQpUCmoKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuw
        C8gL4Qv5DBIMKgxDDFwMdQyODKcMwAzZDPMNDQ0mDUANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62
        DtIO7g8JDyUPQQ9eD3oPlg+zD88P7BAJECYQQxBhEH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxIm
        EkUSZBKEEqMSwxLjEwMTIxNDE2MTgxOkE8UT5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYD
        FiYWSRZsFo8WshbWFvoXHRdBF2UXiReuF9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpR
        GncanhrFGuwbFBs7G2MbihuyG9ocAhwqHFIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8T
        Hz4faR+UH78f6iAVIEEgbCCYIMQg8CEcIUghdSGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRN
        JHwkqyTaJQklOCVoJZclxyX3JicmVyaHJrcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoC
        KjUqaCqbKs8rAis2K2krnSvRLAUsOSxuLKIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1
        MGwwpDDbMRIxSjGCMbox8jIqMmMymzLUMw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbp
        NyQ3YDecN9c4FDhQOIw4yDkFOUI5fzm8Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4g
        PmA+oD7gPyE/YT+iP+JAI0BkQKZA50EpQWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXe
        RiJGZ0arRvBHNUd7R8BIBUhLSJFI10kdSWNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4l
        Tm5Ot08AT0lPk0/dUCdQcVC7UQZRUFGbUeZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3
        V0RXklfgWC9YfVjLWRpZaVm4WgdaVlqmWvVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBX
        YKpg/GFPYaJh9WJJYpxi8GNDY5dj62RAZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpI
        ap9q92tPa6dr/2xXbK9tCG1gbbluEm5rbsRvHm94b9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTM
        dSh1hXXhdj52m3b4d1Z3s3gReG54zHkqeYl553pGeqV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/l
        gEeAqIEKgWuBzYIwgpKC9INXg7qEHYSAhOOFR4Wrhg6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuW
        i/yMY4zKjTGNmI3/jmaOzo82j56QBpBukNaRP5GokhGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfg
        mEyYuJkkmZCZ/JpomtWbQpuvnByciZz3nWSd0p5Anq6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTH
        pTilqaYapoum/adup+CoUqjEqTepqaocqo+rAqt1q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJL
        ssKzOLOutCW0nLUTtYq2AbZ5tvC3aLfguFm40blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBw
        wOzBZ8Hjwl/C28NYw9TEUcTOxUvFyMZGxsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83
        z7jQOdC60TzRvtI/0sHTRNPG1EnUy9VO1dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i
        3ynfr+A24L3hROHM4lPi2+Nj4+vkc+T85YTmDeaW5x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO60
        70DvzPBY8OXxcvH/8ozzGfOn9DT0wvVQ9d72bfb794r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t
        ////2wBDAAYGBgYGBgYHBwYJCgkKCQ0MCwsMDRQODw4PDhQfExYTExYTHxshGxkbIRsxJiIiJjE4Ly0v
        OEQ9PURWUVZwcJb/2wBDAQYGBgYGBgYHBwYJCgkKCQ0MCwsMDRQODw4PDhQfExYTExYTHxshGxkbIRsx
        JiIiJjE4Ly0vOEQ9PURWUVZwcJb/wgARCAGaAtgDASEAAhEBAxEB/8QAHAABAAEFAQEAAAAAAAAAAAAA
        AAcBAwUGCAQC/9oACAEBAAAAAOVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZe95/J6r9MKAA
        AAAAAAAAAAAFe0IFpWnl6N4noAAAAAAAAAAAAAV6H67gKBb1mb+h+Q+eqAAAAAAAAAAAAAZ/rubaeTgb
        14/vnIIH5PwIAAAAAAAAAAAAM7IE8zdf5YiWU+rrcNQRGeAAAAAAAAAAAAABmd781JrlfhzuKMYSsezR
        MKAAAAAAAAAAAAD3SCML4/VnBoGPAAAAAAAAAAAABld0t/UxyZxx2XEcP37ml4oAAAAAAAAAAAAGakGd
        JrvcsxzK3S3igqC9OwwAAAAAAAAAAAANh7EmB4OBcp5u+LyI+NMCAAAAAAAAAAAABXqPqbnSBb/n6RnX
        lDmWgAAAAAAAAAAAABXvXk+quU6G4f8AkAAAAAAAAAAAAANgsfFm/wDeax+tgAAAAAAAAAAAA+la0+qf
        NaVfSlKfIAAAAAAAAAAAH1sfrubfpWw4/Ud+j6Y4d3bSNrsevQ6AAAAAAAAAAAA+t2+LHq8vpu6nlsNL
        0RbBrucyN3Q/kAAAAAAAAAAAD6qUqpStaA+QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf/8QAGgEBAAIDAQAAAAAA
        AAAAAAAAAAEFAgMEBv/aAAgBAhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAc7V2gAAAAAAafK2HoYAAAAAACcvI29vgAAAAAAGc+btu7CAAAAAADny6aa1zr+4AAAAA
        A0eav9nRQzfAAAAAAGvzD0VTx2VyAAAAAAavP3G3ootlyAAAAAAaZ6qG6yr+0AAAAAAZz5q47cIAAAAA
        ADLy1tZ4gAAAAAA00HbcAAAAAAAacMOwAAAAAAIhKEyAAAAABjiiUJ2AAAAAAY4oTCdgAAAAACAEgAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH//xAAbAQEAAgMBAQAAAAAAAAAAAAAA
        AQcCBQYDBP/aAAgBAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAbTL6+eAAAAAAA21z8tVYAAAAAAGV58Jw0AAAAAABK2uF5+AAAAAABtMdbYXC+HS8yAAAAAAbK4qu
        8NRZ2NXAAAAAAH13YqPu+h4+uAAAAAADYW9Xfwa6zPirYAAAAAA2k6uxOB8um5cAAAAAAStvgdFAAAAA
        AAJu7hOMgAAAAAAGyt7mK2AAAAAAA2n1fRzIAAAAAAmcpxZMMQAAAAAPb2mYZPP5YAAAAAB7ezKIlj8s
        AAAAAAnIxyhOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB//xABDEAABAwMD
        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
</value>
  </data>
</root>